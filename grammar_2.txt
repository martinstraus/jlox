// The grammar,refactored for implementing precedence and eliminating ambiguity.

statement -> exprStmt | printStmt | block;

exprStmt -> expression ";";

printStmt -> "print" expression ";"

block -> "{" declaration* "}";

expression -> assignment;

assignment -> IDENTIFIER "=" assignment | expression;

equality -> comparison (("==" | "!=") comparison)*;

comparison -> term (("<" | "<=" | ">" | ">=") term)*;

term -> factor (("-" | "+") factor)*;

factor -> unary (("/" | "*") unary)*;

unary -> ("!" | "-") unary | primary;

primary -> NUMBER | STRING | "true" | "false" | "nil" | "(" expression ")" | IDENTIFIER;
